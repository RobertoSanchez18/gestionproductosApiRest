name: Build, Push to Docker Hub, and Deploy to Kubernetes

on:
  push:
    branches:
      - develop  # Ejecuta este pipeline cuando haya un push a la rama desarrollador

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx (para construir la imagen)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Iniciar sesión en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utiliza el secreto configurado
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utiliza el secreto configurado

      # 4. Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gestionproductos:latest .

      # 5. Subir la imagen Docker a Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/gestionproductos:latest

      # 6. Instalar kubectl para interactuar con Kubernetes
      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      # 7. Configurar Minikube y utilizar kubectl para despliegue
      - name: Deploy to Kubernetes
        run: |
          # Cambia la imagen en los manifiestos de Kubernetes antes de aplicar
          sed -i 's|image:.*|image: '"${{ secrets.DOCKER_USERNAME }}/gestionproductos:latest"'|' k8s.deployment.yaml
          kubectl apply -f k8s.deployment.yaml --validate=false
